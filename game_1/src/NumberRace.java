
import java.applet.AudioClip;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Random;
import java.util.Vector;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jhonatan
 */
public class NumberRace extends javax.swing.JFrame {

    private int counter[]=new int[3000];
    private int counter2[]=new int[3000];
    private int counter3[]=new int[3000];
    private int counter4[]=new int[3000];

    private String dd2[]=new String[3000];

    private int da1[]=new int[3000];
    private int da2[]=new int[3000];
    int i= 0;
    int i2= 0;
    int can4= 0;
    int can= 0;
    int nivel = 50;
    
    /**
     * Creates new form NumberRace
     */
    public NumberRace() {
        initComponents();
        this.setLocationRelativeTo(null); 
        ganador ganador= new ganador();
        ganador.setVisible(false); 

    }

    NumberRace(String text) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mesa = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        dices = new javax.swing.JPanel();
        dice_1 = new javax.swing.JLabel();
        dice_2 = new javax.swing.JLabel();
        suma = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        play = new javax.swing.JButton();
        try_again = new javax.swing.JButton();
        en = new javax.swing.JButton();
        es = new javax.swing.JButton();
        niveles = new javax.swing.JComboBox<>();
        play_2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        scores = new javax.swing.JPanel();
        player = new javax.swing.JLabel();
        points = new javax.swing.JLabel();
        missing = new javax.swing.JLabel();
        player_2 = new javax.swing.JLabel();
        point_2 = new javax.swing.JLabel();
        missing_2 = new javax.swing.JLabel();
        returs = new javax.swing.JLabel();
        returns_2 = new javax.swing.JLabel();
        pairs = new javax.swing.JPanel();
        pairs_2 = new javax.swing.JLabel();
        jugadores = new javax.swing.JComboBox<>();
        level = new javax.swing.JLabel();
        about_of = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("number race");
        setIconImage(getIconImage());

        mesa.setBackground(new java.awt.Color(247, 245, 245));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/auto.gif"))); // NOI18N

        title.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText(" number race");

        dices.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DICES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        dice_1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/question.png"))); // NOI18N

        dice_2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/question.png"))); // NOI18N

        suma.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        suma.setText("#");

        javax.swing.GroupLayout dicesLayout = new javax.swing.GroupLayout(dices);
        dices.setLayout(dicesLayout);
        dicesLayout.setHorizontalGroup(
            dicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dicesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(dice_1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(dice_2)
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dicesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(32, 32, 32)
                .addComponent(suma)
                .addGap(110, 110, 110))
        );
        dicesLayout.setVerticalGroup(
            dicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dicesLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(dicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dice_1)
                    .addComponent(dice_2))
                .addGap(7, 7, 7)
                .addGroup(dicesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suma)
                    .addComponent(jLabel4))
                .addContainerGap())
        );

        play.setText("play");
        play.setEnabled(false);
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        try_again.setText("try again");
        try_again.setEnabled(false);
        try_again.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try_againActionPerformed(evt);
            }
        });

        en.setText("EN");
        en.setEnabled(false);
        en.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enActionPerformed(evt);
            }
        });

        es.setText("ES");
        es.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                esActionPerformed(evt);
            }
        });

        niveles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "basic[50]", "intermediate[100]", "advanced[200]" }));

        play_2.setText("start game");
        play_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play_2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Number of players");

        scores.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Scores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        player.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        player.setText("retun player:");

        points.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        points.setText("advanced positions:");

        missing.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        missing.setText("missing positions:");

        player_2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        player_2.setText("#");

        point_2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        point_2.setText("#");

        missing_2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        missing_2.setText("#");

        returs.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        returs.setText("returns:");

        returns_2.setFont(new java.awt.Font("Arial Black", 1, 11)); // NOI18N
        returns_2.setText("#");

        javax.swing.GroupLayout scoresLayout = new javax.swing.GroupLayout(scores);
        scores.setLayout(scoresLayout);
        scoresLayout.setHorizontalGroup(
            scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoresLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(points)
                    .addComponent(player)
                    .addComponent(missing)
                    .addComponent(returs))
                .addGap(49, 49, 49)
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(player_2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(point_2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(missing_2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returns_2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63))
        );
        scoresLayout.setVerticalGroup(
            scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(player_2)
                    .addComponent(player))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(point_2)
                    .addComponent(points))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(missing_2)
                    .addComponent(missing))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returns_2)
                    .addComponent(returs))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pairs.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "pairs", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        pairs_2.setFont(new java.awt.Font("Arial Black", 0, 48)); // NOI18N
        pairs_2.setText("#");

        javax.swing.GroupLayout pairsLayout = new javax.swing.GroupLayout(pairs);
        pairs.setLayout(pairsLayout);
        pairsLayout.setHorizontalGroup(
            pairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pairsLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(pairs_2)
                .addContainerGap(67, Short.MAX_VALUE))
        );
        pairsLayout.setVerticalGroup(
            pairsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pairsLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(pairs_2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jugadores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3" }));

        level.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        level.setText("level");

        about_of.setText("about of...");
        about_of.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_ofActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tuerca.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mesaLayout = new javax.swing.GroupLayout(mesa);
        mesa.setLayout(mesaLayout);
        mesaLayout.setHorizontalGroup(
            mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mesaLayout.createSequentialGroup()
                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mesaLayout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(mesaLayout.createSequentialGroup()
                        .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mesaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mesaLayout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addComponent(jugadores, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mesaLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(niveles, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(mesaLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(play_2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mesaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(about_of)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(en)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(es)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mesaLayout.createSequentialGroup()
                        .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mesaLayout.createSequentialGroup()
                                .addComponent(dices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(mesaLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(try_again)
                                .addGap(20, 20, 20)))
                        .addComponent(pairs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(scores, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        mesaLayout.setVerticalGroup(
            mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mesaLayout.createSequentialGroup()
                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(mesaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(about_of)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(es, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(en)))))
                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mesaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(level)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(niveles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(play_2))
                    .addGroup(mesaLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mesaLayout.createSequentialGroup()
                                .addComponent(dices, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(mesaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(play)
                                    .addComponent(try_again)))
                            .addComponent(pairs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mesa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   public Image getIconImage() {
   Image retValue = Toolkit.getDefaultToolkit().
         getImage(ClassLoader.getSystemResource("icons/car.png"));
         return retValue;
}
    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed

    
        
    String can2 = jugadores.getSelectedItem().toString();
    int can = Integer.parseInt(can2);
    int g=0,winner=0;
    AudioClip sonido;
    sonido = java.applet.Applet.newAudioClip(getClass().getResource("audios/sonido_dados.wav"));
    sonido.play();
    String niv = niveles.getSelectedItem().toString();
    int jugador[]=new int [can];
    int dd[] = new int [can];
    for(int i2=1;i2 <= can;i2++){
            jugador[g]= i2;
            g++;
    }
    String j = Integer.toString(jugador[i]);
    player_2.setText(j);
    int sum[]=new int [can];
    if(niv == "basic[50]"){
        nivel=50;
        System.out.println("basico");
    }else if (niv == "intermediate[100]"){
        nivel=100;
        System.out.println("medium");
    }else if (niv == "advanced[200]"){
        nivel=200;
        System.out.println("experto");
    }
    
    Random D = new Random();
    int d1 = 0,d2 = 0;
    d1 = (int)(D.nextDouble()* 6 + 1);
    d2 = (int)(D.nextDouble()* 6 + 1);

    
    dd2[i2] = Integer.toString(d2);
    System.out.println("numero: "+i2);
    System.out.println("this "+d2);


    for (int t=0;t<=i2;t++){  
        System.out.println(dd2[t]);
        g++;  
    }
    if(d1==d2){
    i2++;
    if(i2>=3){
    if (dd2[i2]==dd2[i2+1] && dd2[i2]==dd2[i2+2]){
        winner=1;
        i2=2;
    }
    }
    }else if (d1!=d2){
     i2=0;
    }
    sum[i] = d1 + d2;
    String c3 = Integer.toString(d2);
    String c = Integer.toString(sum[i]);
    if(d1==1 && d2==1){
        sum[i]=21;
        c="21";
    }

    if (counter[i]>=nivel-6 && counter[i]<nivel){
        d1=0;
        sum[i]=d2;
        c=c3; 
 
    }
    

    suma.setText(c);
 //points   
 //missing 
    counter[i] = counter[i] + sum[i];
//returns
    
    if (counter[i] == nivel || counter2[i] == 3 || winner==1){
        System.out.println("--------------------------------------------------------------------");
        System.out.println("el ganador es: "+jugador[i]);
        play.setEnabled(false);
        String c2 = Integer.toString(jugador[i]);
        ganador ganador= new ganador();
        ganador.gana.setText(c2);
        if(i2==2){
            ganador.par1_1.setText(dd2[0]);
            ganador.par1_2.setText(dd2[0]);
            ganador.par2_1.setText(dd2[1]);
            ganador.par2_2.setText(dd2[1]);           
            ganador.par3_1.setText(dd2[2]);
            ganador.par3_2.setText(dd2[2]);
        }else if(i2==1){
            ganador.par1_1.setText(dd2[0]);
            ganador.par1_2.setText(dd2[0]);
            ganador.par2_1.setText(dd2[1]);
            ganador.par2_2.setText(dd2[1]);
            ganador.par3_1.setText("#");
            ganador.par3_2.setText("#");
        }else if(i2==0){
            ganador.par1_1.setText(dd2[0]);
            ganador.par1_2.setText(dd2[0]);
            ganador.par2_1.setText("#");
            ganador.par2_2.setText("#");
            ganador.par3_1.setText("#");
            ganador.par3_2.setText("#");            
            
        }else if (i2<2){
            ganador.par1_1.setText("#");
            ganador.par1_2.setText("#");
            ganador.par2_1.setText("#");
            ganador.par2_2.setText("#");           
            ganador.par3_1.setText("#");
            ganador.par3_2.setText("#");         
        }   
        ganador.setVisible(true);
         String can3 = jugadores.getSelectedItem().toString();
         int can4 = Integer.parseInt(can2); 
    }

    if(counter[i] > nivel){
        counter[i]=counter[i]-sum[i];
    }
     if(can>=2){
        if (i == 0){
            for (int i2=i+1;i2<=can;i2++){
//                System.out.println(i + " "+i2);
                if(counter[i]==counter[i2]){
//                    System.out.println("aqui");
                    counter[i2]=0;
                    counter4[i2] = counter4[i2] + 1;
                }
            }
//            System.out.println(0+" "+0);
        }else if(i>=1){
            for (int i2=i-1;i2>=0;i2--){
//                System.out.println(i + " "+i2);
                if(counter[i]==counter[i2]){
//                    System.out.println("aqui");
                    counter[i2]=0;
                    counter4[i2] = counter4[i2] + 1;
                }
            }
            for (int i2=i+1;i2<=can;i2++){
//                System.out.println(i + " "+i2);
                if(counter[i]==counter[i2]){
//                    System.out.println("aqui");
                    counter[i2]=0;
                }
            }
        }
    }
    returns_2.setText(Integer.toString(counter4[i])); 
     
    point_2.setText(Integer.toString(counter[i]));   
    counter3[i]=nivel-counter[i];
    missing_2.setText(Integer.toString(counter3[i]));   
    if (d1 == d2){

        counter2[i] = counter2[i] + 1;      
        if (counter2[i]==1){
            System.out.println("par");
            counter2[i]=1;
            pairs_2.setText(Integer.toString(counter2[i]));
            sum[i]=d2*2;


        }
        if (counter2[i]==2){
            System.out.println("par X2");
            counter2[i]=2;
            pairs_2.setText(Integer.toString(counter2[i]));
            sum[i]=d2*2;


        }
        if (counter2[i]==3){
            System.out.println("par X3");
            counter2[i]=3;
            counter[i]=nivel;
            pairs_2.setText(Integer.toString(counter2[i])); 
            sum[i]=d2*2;      
           
        }
        if (counter2[i]==0){
            counter2[i]=0;
            pairs_2.setText(Integer.toString(counter2[i]));            
        }
        i--;
        
    }else if (d1 != d2 && counter2[i]==2 || d1 != d2 && counter2[i]==1){
        counter2[i]=0;
        pairs_2.setText(Integer.toString(counter2[i]));
//        System.out.println("borar");
    }


   // counter[i] = counter[i] + sum[i];
    for (int t=0;t<=can-1;t++){   
        System.out.println("points: "+counter[t]+" pairs: "+counter2[t]+" missing: "+counter3[t]+" returns: "+counter4[t]+" player: "+jugador[t]);       
    }   
    System.out.println("--------------------------------------------------------------------");    

 

     
      
     
    i++;
    
    if (i == can){
       i = 0;
    }
    switch(d1){
            case 0:
            dice_1.setIcon(new ImageIcon(getClass().getResource("images/question.png")));

                break;
            case 1:
            dice_1.setIcon(new ImageIcon(getClass().getResource("images/1.png")));

                break;
            case 2:
                dice_1.setIcon(new ImageIcon(getClass().getResource("images/2.png")));

                break;
            case 3:
                dice_1.setIcon(new ImageIcon(getClass().getResource("images/3.png"))); 

                break;
            case 4:
                dice_1.setIcon(new ImageIcon(getClass().getResource("images/4.png"))); 

                break;
            case 5:
                dice_1.setIcon(new ImageIcon(getClass().getResource("images/5.png")));

                break;
            case 6:
                dice_1.setIcon(new ImageIcon(getClass().getResource("images/6.png")));

                break;
            default:
                break;
        }
 switch(d2){
            case 1:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/1.png")));
                break;
            case 2:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/2.png")));
                break;
            case 3:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/3.png")));
                break;
            case 4:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/4.png")));
                break;
            case 5:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/5.png")));
                break;
            case 6:
                dice_2.setIcon(new ImageIcon(getClass().getResource("images/6.png")));
                break;
            default:
                break;
    }
    }//GEN-LAST:event_playActionPerformed

    private void try_againActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_try_againActionPerformed
      
      NumberRace NumberRace= new NumberRace();
      NumberRace.setVisible(true);
      dispose();  

    }//GEN-LAST:event_try_againActionPerformed

    private void esActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_esActionPerformed
        en.setEnabled(true);
        es.setEnabled(false);
        title.setText("carrera numerica");
        play.setText("jugar");
        jLabel3.setText("cantidad de jugadores");
        play_2.setText("empezar juego");
        try_again.setText("Inténtalo de nuevo");
        dices.setBorder(javax.swing.BorderFactory.createTitledBorder("DADOS"));
        player.setText("jugador:");
        missing.setText("desaparecido:");
        points.setText("puntos:");
        level.setText("nivel");
        about_of.setText("acerca de...");
        pairs.setBorder(javax.swing.BorderFactory.createTitledBorder("pares"));
        scores.setBorder(javax.swing.BorderFactory.createTitledBorder("Puntuaciones"));
        this.setTitle("carrera numerica");

    }//GEN-LAST:event_esActionPerformed

    private void enActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enActionPerformed
        es.setEnabled(true);
        en.setEnabled(false);
        title.setText("number race");
        about_of.setText("about of...");
        level.setText("level");
        jLabel3.setText("Number of players");
        play.setText("play");
        play_2.setText("start game");
        try_again.setText("try again");
        dices.setBorder(javax.swing.BorderFactory.createTitledBorder("DICES"));
        player.setText("player:");
        missing.setText("missing:");
        points.setText("points:");
        pairs.setBorder(javax.swing.BorderFactory.createTitledBorder("pairs"));
        scores.setBorder(javax.swing.BorderFactory.createTitledBorder("Scores"));
        this.setTitle("number race");

    }//GEN-LAST:event_enActionPerformed
   
    private void play_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play_2ActionPerformed

        play.setEnabled(true);
        try_again.setEnabled(true);
        play_2.setEnabled(false);
        
    }//GEN-LAST:event_play_2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ajustes ajustes= new ajustes();
        ajustes.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void about_ofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_ofActionPerformed
        about_of about_of= new about_of();
        about_of.setVisible(true);
    }//GEN-LAST:event_about_ofActionPerformed
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {  
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NumberRace().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton about_of;
    private javax.swing.JLabel dice_1;
    private javax.swing.JLabel dice_2;
    private javax.swing.JPanel dices;
    private javax.swing.JButton en;
    private javax.swing.JButton es;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JComboBox<String> jugadores;
    private javax.swing.JLabel level;
    private javax.swing.JPanel mesa;
    private javax.swing.JLabel missing;
    private javax.swing.JLabel missing_2;
    private javax.swing.JComboBox<String> niveles;
    private javax.swing.JPanel pairs;
    private javax.swing.JLabel pairs_2;
    private javax.swing.JButton play;
    private javax.swing.JButton play_2;
    private javax.swing.JLabel player;
    private javax.swing.JLabel player_2;
    private javax.swing.JLabel point_2;
    private javax.swing.JLabel points;
    private javax.swing.JLabel returns_2;
    private javax.swing.JLabel returs;
    private javax.swing.JPanel scores;
    private javax.swing.JLabel suma;
    private javax.swing.JLabel title;
    private javax.swing.JButton try_again;
    // End of variables declaration//GEN-END:variables
}
